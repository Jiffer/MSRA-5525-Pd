#N canvas 1793 160 1458 811 12;
#X text 104 350 Here [line~] is used to create a simple Attack Release (AR) envelope. The messages tell it to ramp to a value in the specified time (in milliseconds). In the messages sent to [line~]: the first number is the target value - second number is the time to get there;
#X obj 110 855 dac~;
#X floatatom 106 528 5 0 0 0 - - - 0;
#X obj 108 783 *~;
#X obj 106 561 osc~;
#X obj 161 745 line~;
#X text 155 528 frequency;
#X obj 105 501 mtof;
#X floatatom 106 475 5 0 0 0 - - - 0;
#X text 158 473 MIDI note number (60 = middle C);
#X msg 158 634 0.25 10;
#X text 249 677 Go to volume of 0 (off) in 1000 ms;
#X text 220 632 Go to volume of 0.25 in 10 ms;
#X msg 189 678 0 1000;
#X msg 106 446 60;
#X obj 282 208 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 282 187 loadbang;
#X obj 282 225 metro 20;
#X obj 282 247 snapshot~;
#X floatatom 123 264 5 0 0 0 - - - 0;
#X obj 122 181 line~;
#X text 358 229 <- this shows one way to view the value of an audio rate (~) signal by taking "snapshots" \, in this case every 20 ms.;
#X msg 124 143 10 5000;
#X msg 192 145 0 500;
#X msg 60 112 -10;
#X msg 96 112 0;
#X text 138 111 <- messages with a single value set the output immediately;
#X text 241 145 <- with 2 values the first is the target \, the seconds is the ramp time in ms.;
#X text 57 44 [line~] creates audio rate ramp signals great for envelopes;
#X obj 107 423 loadbang;
#X connect 2 0 4 0;
#X connect 3 0 1 0;
#X connect 3 0 1 1;
#X connect 4 0 3 0;
#X connect 5 0 3 1;
#X connect 7 0 2 0;
#X connect 8 0 7 0;
#X connect 10 0 5 0;
#X connect 13 0 5 0;
#X connect 14 0 8 0;
#X connect 15 0 17 0;
#X connect 16 0 15 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 20 0 18 0;
#X connect 22 0 20 0;
#X connect 23 0 20 0;
#X connect 24 0 20 0;
#X connect 25 0 20 0;
#X connect 29 0 14 0;
